{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","react_default","a","createElement","className","Fragment","placeholder","onChange","name","ref","onClick","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","index_esm","ti_index_esm","TodoList","setTodos","test","newTodos","concat","toConsumableArray","components_Todo","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4c0f4fcf.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput]=useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {\r\n      inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e =>{\r\n        setInput(e.target.value);\r\n    };\r\n    \r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        props.onSubmit({\r\n         id:Math.floor(Math.random() * 10000),\r\n         text: input\r\n        });\r\n        setInput('');\r\n\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className='todo-form'>\r\n        {props.edit ? (\r\n          <>\r\n            <input\r\n              placeholder='Update your item'\r\n              value={input}\r\n              onChange={handleChange}\r\n              name='text'\r\n              ref={inputRef}\r\n              className='todo-input edit'\r\n            />\r\n            <button onClick={handleSubmit} className='todo-button edit'>\r\n              Update\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input\r\n              placeholder='Add a todo'\r\n              value={input}\r\n              onChange={handleChange}\r\n              name='text'\r\n              className='todo-input'\r\n              ref={inputRef}\r\n            />\r\n            <button onClick={handleSubmit} className='todo-button'>\r\n              Add todo\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\r\n  const [edit,setEdit]= useState({\r\n     id: null,\r\n     value: ''\r\n  });\r\n\r\n  const submitUpdate = value =>{\r\n    updateTodo(edit.id, value)\r\n    setEdit({\r\n        id:null,\r\n        value: ''\r\n      })\r\n  }\r\n\r\n  if(edit.id){\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate}>\r\n      </TodoForm>\r\n  }\r\n\r\n  return todos.map((todo,index) => (\r\n  <div \r\n    className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n     key={index}>\r\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n          <RiCloseCircleLine \r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n          />\r\n          <TiEdit\r\n          onClick={() => setEdit({ id:todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n          />\r\n        </div>\r\n   </div>\r\n  ));\r\n}\r\n\r\nexport default Todo","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo =>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n      \r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n      if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n        return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    };\r\n\r\n    const removeTodo = id => {\r\n      const removeArr = [...todos].filter(todo => todo.id !== id)\r\n      setTodos(removeArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n        if(todo.id === id){\r\n          todo.isComplete = !todo.isComplete;\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h1>What's the plan for today?</h1>\r\n        <TodoForm onSubmit={addTodo}/>\r\n        <Todo \r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}